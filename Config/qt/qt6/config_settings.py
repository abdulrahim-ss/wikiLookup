# Form implementation generated from reading ui file 'config_settings.ui'
#
# Created by: PyQt6 UI code generator 6.5.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_Settings(object):
    def setupUi(self, Settings):
        Settings.setObjectName("Settings")
        Settings.setEnabled(True)
        Settings.resize(452, 294)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(Settings.sizePolicy().hasHeightForWidth())
        Settings.setSizePolicy(sizePolicy)
        Settings.setModal(True)
        self.outerGrid = QtWidgets.QGridLayout(Settings)
        self.outerGrid.setObjectName("outerGrid")
        self.buttonBox = QtWidgets.QDialogButtonBox(parent=Settings)
        self.buttonBox.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.StandardButton.Cancel|QtWidgets.QDialogButtonBox.StandardButton.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.outerGrid.addWidget(self.buttonBox, 5, 3, 1, 1)
        self.version = QtWidgets.QLabel(parent=Settings)
        self.version.setObjectName("version")
        self.outerGrid.addWidget(self.version, 5, 0, 1, 2)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setSizeConstraint(QtWidgets.QLayout.SizeConstraint.SetDefaultConstraint)
        self.gridLayout.setVerticalSpacing(3)
        self.gridLayout.setObjectName("gridLayout")
        self.languageLabel_2 = QtWidgets.QLabel(parent=Settings)
        self.languageLabel_2.setObjectName("languageLabel_2")
        self.gridLayout.addWidget(self.languageLabel_2, 2, 0, 1, 1)
        self.checkBox = QtWidgets.QCheckBox(parent=Settings)
        self.checkBox.setText("")
        self.checkBox.setObjectName("checkBox")
        self.gridLayout.addWidget(self.checkBox, 2, 1, 1, 1)
        self.languageLabel = QtWidgets.QLabel(parent=Settings)
        self.languageLabel.setObjectName("languageLabel")
        self.gridLayout.addWidget(self.languageLabel, 1, 0, 1, 1)
        self.lookupTrigger = QtWidgets.QKeySequenceEdit(parent=Settings)
        self.lookupTrigger.setStatusTip("")
        self.lookupTrigger.setWhatsThis("")
        self.lookupTrigger.setObjectName("lookupTrigger")
        self.gridLayout.addWidget(self.lookupTrigger, 0, 1, 1, 1)
        self.shortcutLabel = QtWidgets.QLabel(parent=Settings)
        self.shortcutLabel.setObjectName("shortcutLabel")
        self.gridLayout.addWidget(self.shortcutLabel, 0, 0, 1, 1)
        self.languageSelector = QtWidgets.QComboBox(parent=Settings)
        self.languageSelector.setMaxVisibleItems(10)
        self.languageSelector.setObjectName("languageSelector")
        self.gridLayout.addWidget(self.languageSelector, 1, 1, 1, 1)
        self.outerGrid.addLayout(self.gridLayout, 0, 0, 2, 4)
        self.infoLabel = QtWidgets.QLabel(parent=Settings)
        self.infoLabel.setContextMenuPolicy(QtCore.Qt.ContextMenuPolicy.NoContextMenu)
        self.infoLabel.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.infoLabel.setWordWrap(True)
        self.infoLabel.setObjectName("infoLabel")
        self.outerGrid.addWidget(self.infoLabel, 4, 1, 1, 3)

        self.retranslateUi(Settings)
        self.languageSelector.setCurrentIndex(-1)
        self.buttonBox.accepted.connect(Settings.accept) # type: ignore
        self.buttonBox.rejected.connect(Settings.reject) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(Settings)

    def retranslateUi(self, Settings):
        _translate = QtCore.QCoreApplication.translate
        Settings.setWindowTitle(_translate("Settings", "WikiLookup config"))
        self.version.setText(_translate("Settings", "V 1.0.0"))
        self.languageLabel_2.setToolTip(_translate("Settings", "Whether to always show the lookup pop-up or only when card is flipped"))
        self.languageLabel_2.setText(_translate("Settings", "Only trigger if card is flipped?"))
        self.languageLabel.setToolTip(_translate("Settings", "The language wiki in which the add-on will look up the selected word(s)"))
        self.languageLabel.setText(_translate("Settings", "Choose Lookup language"))
        self.lookupTrigger.setToolTip(_translate("Settings", "Left-click and choose key combo, then hit enter"))
        self.shortcutLabel.setToolTip(_translate("Settings", "The keyboard shortcut for the add-on to trigger"))
        self.shortcutLabel.setText(_translate("Settings", "Lookup shortcut trigger"))
        self.languageSelector.setToolTip(_translate("Settings", "The language wiki in which the add-on will look up the selected word(s)"))
        self.infoLabel.setText(_translate("Settings", "For changes to apply, please reinitialize deck (go back to deck picker and reopen your study deck)"))
